version: "3.0"

services:

    database:
        container_name: ssp3_database
        image: mysql:5.6
        environment: 
            MYSQL_ROOT_PASSWORD: password1234
            MYSQL_DATABASE: ssp3
            MYSQL_USER: user_dev
            MYSQL_PASSWORD: 1234
        ports: 
            - "3306:3306"
        volumes: 
            - ./api/mysql_data:/var/lib/mysql
        networks: 
            - network_database
    
    phpmyadmin:
        container_name: ssp3_phpma
        depends_on: 
            - database
        image: phpmyadmin/phpmyadmin:4.9
        ports: 
            - "8080:80"
        environment: 
            PMA_HOST: database
            PMA_USER: user_dev
            PMA_PASSWORD: 1234
        networks: 
            - network_database

    api:
        container_name: ssp3_api
        depends_on: 
            - database
        build: 
            context: ./api
            dockerfile: Dockerfile-dev
        volumes: 
            - ./api:/home/api
            - /home/api/node_modules
        environment: 
            DB_HOST: database
            DB_NAME: ssp3
            DB_USER: user_dev
            DB_PASSWORD: 1234
            API_SECRET: myjsonwebtokensecretvalue
            EMAIL_SECRET: myemailsecretkeyfortoken
            MAIL_LOGIN: jwp7bw3ypsxhc3n6@ethereal.email
            MAIL_USER: jwp7bw3ypsxhc3n6@ethereal.email
            MAIL_PASSWORD: g8qC37Fxx5PhT9HrzA
            MAIL_SERVICE_PORT: 587
            MAIL_SERVICE_HOST: smtp.ethereal.email
            NODE_ENV: development
        ports:
            - 3002:3002
        networks: 
            - network_database
        command: npm run start-dev

    app:
        container_name: ssp3_app
        depends_on: 
            - api
        build: 
            context: ./client
            dockerfile: Dockerfile-dev
        ports: 
            - 3000:3000
        volumes: 
            - ./client:/home/app
            - /home/app/node_modules
        environment: 
            REACT_APP_API_ENDPOINT: http://localhost:3002
            CI: "true"
        networks: 
            - network_database
        command: npm run start
networks: 
    network_database:
